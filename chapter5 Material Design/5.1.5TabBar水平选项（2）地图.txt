import 'package:flutter/material.dart';
class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return new MaterialApp(
      //添加DefaultTabController关联TabBar及TabBarView
        home: new DefaultTabController(
            length: items.length,//传入tab的数量，也就是选项卡数量  该字段必须有
            child: new Scaffold(
              appBar: new AppBar(
                title: const Text('选项卡示例'),
                bottom: new TabBar(
                  isScrollable: true,//设置为可以滚动
                  //迭代items 并生成Tab对象
                  tabs: items.map((ItemView item) {//迭代添加选项卡子项
                    return new Tab(
                      text: item.title,
                      icon: new Icon(item.icon),
                    );
                  }).toList(),
                ),
              ),
              //添加选项卡视图
              body: new TabBarView(
                  children: items.map((ItemView item) {//迭代显示选项卡视图
                    return new Padding(//四周添加一定的空隙
                      padding: const EdgeInsets.all(20.0),
                      child: new Center(child: new SelectView(item: item)),
                    );
                  }).toList()),
            )
        )
    );
  }
}
//视图项数据
class ItemView {
  const ItemView({this.title, this.icon});//构造方法
  final String title;//标题
  final IconData icon;//图标
}
//添加选项卡的类目 即tab 图标的集合
const List<ItemView> items = const <ItemView>[
  const ItemView(title: '我的账户', icon: Icons.account_box),
  const ItemView(title: '转账', icon: Icons.monetization_on),
  const ItemView(title: '明细', icon: Icons.event_note),
  const ItemView(title: '客服', icon: Icons.phone),
  const ItemView(title: '信息', icon: Icons.textsms),
  const ItemView(title: '搜索', icon: Icons.search),
  const ItemView(title: '设置', icon: Icons.settings),
];
//被选中的视图
class SelectView extends StatelessWidget {
  const SelectView({Key key, this.item}) : super(key: key);
//视图数据
  final ItemView item;

  @override
  Widget build(BuildContext context) {
    final TextStyle textStyle = Theme.of(context).textTheme.display1;
    return new Card(
      color: Colors.white,
      child: new Center(
        child: new Column(
          mainAxisSize: MainAxisSize.min, //垂直方向最小化处理
          crossAxisAlignment: CrossAxisAlignment.center, //水平反向居中对齐
          children: <Widget>[
            new Icon(item.icon, size: 150, color: textStyle.color),
            new Text(item.title, style: textStyle),
          ],
        ),
      ),
    );
  }
}

void main() {
  runApp(new MyApp());
}